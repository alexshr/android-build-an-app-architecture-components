apply plugin: 'com.android.application'

project.ext {
    support_version = "27.0.0"
    //arch_version = "1.0.0-rc1"
    arch_version = "1.0.0"
    arch_runtime_version = "1.0.3"
    constraint_layout_version = "1.1.0-beta3"
    firebase_jobdispatcher_version = "0.7.0"
    junit_version = "4.12"
    support_test_version = "1.0.0"
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'

    defaultConfig {
        applicationId "com.example.android.sunshine"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// Versions number variables are defined in the module build.gradle file
dependencies {
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:preference-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.firebase:firebase-jobdispatcher:$firebase_jobdispatcher_version"

    //for lifecycles
    implementation "android.arch.lifecycle:common-java8:$arch_version"

    //for LiveData, and ViewModel
    implementation "android.arch.lifecycle:extensions:$arch_version"
    //testImplementation "android.arch.core:core-testing:$arch_version"

    //for Room
    implementation "android.arch.persistence.room:runtime:$arch_version"
    annotationProcessor "android.arch.persistence.room:compiler:$arch_version"
    //testImplementation "android.arch.persistence.room:testing:$arch_version"
    //implementation "android.arch.persistence.room:rxjava2:$arch_version"

    // Instrumentation dependencies use androidTestCompile"
    // (as opposed to testCompile for local unit tests run in the JVM"
    androidTestCompile "junit:junit:$junit_version"
    androidTestCompile "com.android.support:support-annotations:$support_version"
    androidTestCompile "com.android.support.test:runner:$support_test_version"
    androidTestCompile "com.android.support.test:rules:$support_test_version"

    //annotationProcessor "android.arch.persistence.room:compiler:$arch_version"

    //compile "android.arch.lifecycle:runtime:$arch_runtime_version"

    //annotationProcessor "android.arch.lifecycle:compiler:$arch_version"
    //annotationProcessor "android.arch.lifecycle:common-java8:$arch_version"
}
